  networks:
    frontend:
      driver: ${NETWORKS_DRIVER}
  
  services:
    nginx:
      restart: always
      build:
        context: ./nginx
        args:
          - CHANGE_SOURCE=${CHANGE_SOURCE}
          - http_proxy
          - https_proxy
          - no_proxy
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        - ${NGINX_SSL_PATH}:/etc/nginx/ssl
        - ./certbot/letsencrypt/:/var/www/letsencrypt
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      networks:
        - frontend
      extra_hosts:
        - "host.docker.internal:host-gateway"  

    ### Certbot #########################################
    certbot:
      build:
        context: ./certbot
      volumes:
        - ${NGINX_SSL_PATH}:/var/certs
        - ./certbot/letsencrypt/:/var/www/letsencrypt
      environment:
        - ENV=${CERTBOT_ENV} #change to 'production' to generate real certificates. 'staging' will by default dry run the request to pr>
        - CN=${CERTBOT_CN} #comma separated values of all the domains you wish to add ssl certificates on
        - EMAIL=${CERTBOT_EMAIL}
      depends_on:
        - nginx
      networks:
        - frontend
      restart: always
